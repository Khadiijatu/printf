NAME
	- prinf

DESCRIPTION
	writes the output under the control of a format that specifies how subsequent arguments are converted for output.
The conversion specifiers are:
	s - writes a string to stdout
	%% - prints the % sign
	c - wries a single character to stdout
	d or i - transforms a signed integer to a decimal representation
	o - displays an unsigned integer using an octal representation
	x or X - transforms an unsigned integer to a hexadecimal representation
	u - displays an unsigned integer using a decimal representation
	f or F - turns a floating-point number into a decimal representation
	e or E - transforms a floating-point number into a decimal exponent notation
	a or A - displays a floating-point number using a hexadecimal exponent
	g or G - displays a floating point number using decimal or decimal exponent notation
	n - returns the number of characters written using this function. It writes the result to the value pointed by the argument
	p - a pointer that points to the implementation-defined character sequence
GENERAL FORM OF FORMAT SPECIFIERS:
	% - the leading sign that denotes the begining of the specifier
	flags are values that can modify the conversion behavious. Examples are:
		'-' : the result of printf function is by default right justified. This value justifies the results to the left
